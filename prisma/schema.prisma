generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(uuid()) @db.VarChar(36)
  email          String?   @unique @db.VarChar(191) // Safe for indexing
  phone          String?   @unique @db.VarChar(20)
  passwordHash   String?   @db.VarChar(191)        // Safe length
  name           String?   @db.VarChar(100)
  profilePicture String?   @db.VarChar(191)
  isVerified     Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  lastLoginAt    DateTime?
  otps           Otp[]
  devices        Device[]
  sessions       Session[]

  @@index([email])
  @@index([phone])
  @@map("users")
}

model Otp {
  id        String    @id @default(uuid()) @db.VarChar(36)
  userId    String    @db.VarChar(36)
  code      String    @db.VarChar(6)
  type      OtpType
  expiresAt DateTime
  createdAt DateTime  @default(now())
  isUsed    Boolean   @default(false)

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, expiresAt])
  @@index([code])
  @@map("otps")
}

enum OtpType {
  EMAIL
  PHONE
}

model Device {
  id           String   @id @default(uuid()) @db.VarChar(36)
  userId       String   @db.VarChar(36)
  deviceId     String   @unique @db.VarChar(191)
  deviceType   String?  @db.VarChar(50)
  deviceName   String?  @db.VarChar(100)
  lastActiveAt DateTime @default(now())
  location     String?  @db.VarChar(100)

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  sessions Session[]

  @@index([userId])
  @@index([userId, lastActiveAt])
  @@map("devices")
}

model Session {
  id        String    @id @default(uuid()) @db.VarChar(36)
  userId    String    @db.VarChar(36)
  deviceId  String    @db.VarChar(36)

  /// Store SHA-256 hash of token instead of full token
  tokenHash String    @unique @db.Char(64)  

  ipAddress String?   @db.VarChar(45)
  userAgent String?   @db.VarChar(191)
  expiresAt DateTime?
  createdAt DateTime  @default(now())
  revoked   Boolean   @default(false)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  device Device @relation(fields: [deviceId], references: [id], onDelete: Cascade)

  @@index([userId, expiresAt])
  @@index([userId, deviceId])
  @@map("sessions")
}